#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build-OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@master

      - name: 初始化工作环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo swapoff /swapfile
          sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          curl -fsSL https://raw.githubusercontent.com/KleinerSource/P3-OpenWrt-Actions/master/.bashrc >> ~/.bashrc

      - name: 克隆 OpenWrt 源码
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: 更新&安装源
        run: |
          cd openwrt && ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 载入固件定制自定义配置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          cd openwrt
          ../$DIY_SH

      - name: SSH 连接到 Actions
        uses: KleinerSource/debugger-action@master
        if: env.SSH_ACTIONS == 'true'

      - name: 下载所需文件
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译固件
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          echo "::set-output name=status::success"

      - name: 上传 Bin 目录
        uses: actions/upload-artifact@master
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
        with:
          name: OpenWrt_directory
          path: openwrt/bin

      - name: 清理多余文件
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "::set-env name=FIRMWARE::$PWD"
          echo "::set-output name=status::success"

      - name: 上传固件目录
        uses: actions/upload-artifact@master
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt SSRP++ 固件包
          path: ${{ env.FIRMWARE }}

      - name: 上传 IPK 目录
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt IPK 包
          path: openwrt/bin/packages/